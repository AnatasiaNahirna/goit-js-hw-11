{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nexport default function getImagesByQuery(query) {\n    return axios.get(\"https://pixabay.com/api/\", {\n        params: {\n            key: \"51402348-a0c5f352e8dacc54a34bc803e\",\n            q: query,\n            image_type: \"photo\",\n            orientation: \"horizontal\",\n            safesearch: true,\n        }\n    }).then((response) => {\n        if (response.data.hits.length === 0) {\n            iziToast.show({\n                message: 'Sorry, there are no images matching your search query. Please try again!',\n                messageColor: \"#fff\",\n                backgroundColor: \"#EF4040\"\n            });\n            return;\n        };\n        \n        return response.data.value;\n    });\n    }","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n// const simplebox = new SimpleLightbox();\n\nexport default function createGallery(images) {\n    const container = document.querySelector(\".container\");\n    container.insertAdjacentHTML(\"beforeend\", \"<ul class=”gallery”>\");\n    const gallery = document.querySelector(\".gallery\");\n    const markup = images.map((image) => {\n        const { webformatURL, largeImageURL, tags, likes, views, comments, downloads } = image;\n        return `<li class=\"img-li\">\n        <a href=\"${largeImageURL}\">\n        <img src=\"${webformatURL}\" alt=\"${tags}\">\n        <div class=\"stats\"><p>Likes</p><p>${likes}</p></div>\n        <div class=\"stats\"><p>Views</p><p>${views}</p></div>\n        <div class=\"stats\"><p>Comments</p><p>${comments}</p></div>\n        <div class=\"stats\"><p>Downloads</p><p>${downloads}</p></div>\n        </a>\n        </li>`\n    }).join(\"\");\n    gallery.insertAdjacentHTML(\"beforeend\", markup);\n}\n\nfunction clearGallery() { }\n\nfunction showLoader() { }\n\nfunction hideLoader() {}","import getImages from \"./js/pixabay-api\"\nimport markup from \"./js/render-functions\"\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", (ev) => {\n    ev.preventDefault()\n    const search = ev.currentTarget.elements['search-text'].value.trim()\n    if (!search) {\n        return;\n    };\n    getImages(search)\n        .then((images) => { return markup(images) });\n})"],"names":["getImagesByQuery","query","axios","response","iziToast","createGallery","images","gallery","markup","image","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","ev","search","getImages"],"mappings":"6vBAIe,SAASA,EAAiBC,EAAO,CAC5C,OAAOC,EAAM,IAAI,2BAA4B,CACzC,OAAQ,CACJ,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACf,CACT,CAAK,EAAE,KAAME,GAAa,CAClB,GAAIA,EAAS,KAAK,KAAK,SAAW,EAAG,CACjCC,EAAS,KAAK,CACV,QAAS,2EACT,aAAc,OACd,gBAAiB,SACjC,CAAa,EACD,MAEZ,CACQ,OAAOD,EAAS,KAAK,KAC7B,CAAK,CACL,CCpBe,SAASE,EAAcC,EAAQ,CACxB,SAAS,cAAc,YAAY,EAC3C,mBAAmB,YAAa,sBAAsB,EAChE,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAASF,EAAO,IAAKG,GAAU,CACjC,KAAM,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,EAAGP,EACjF,MAAO;AAAA,mBACIE,CAAa;AAAA,oBACZD,CAAY,UAAUE,CAAI;AAAA,4CACFC,CAAK;AAAA,4CACLC,CAAK;AAAA,+CACFC,CAAQ;AAAA,gDACPC,CAAS;AAAA;AAAA,cAGzD,CAAK,EAAE,KAAK,EAAE,EACVT,EAAQ,mBAAmB,YAAaC,CAAM,CAClD,CCnBA,MAAMS,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAWC,GAAO,CACpCA,EAAG,eAAgB,EACnB,MAAMC,EAASD,EAAG,cAAc,SAAS,aAAa,EAAE,MAAM,KAAM,EAC/DC,GAGLC,EAAUD,CAAM,EACX,KAAMb,GAAoBE,EAAOF,CAAM,CAAG,CACnD,CAAC"}